version: "3.9"

services:
  postgres:
    image: postgres:15
    container_name: postgres
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - db_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:8
    container_name: pgadmin
    depends_on:
      - postgres
    env_file: .env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "${PGADMIN_PORT}:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - db_net

  flask_api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flask_api
    depends_on:
      - postgres
    env_file: .env
    ports:
      - "5007:5007"
    networks:
      - db_net
    volumes:
      - ./app:/app
      - ./data:/data

networks:
  db_net:
    name: db_net
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data:
